To apply a mutant on disk:
    mutmut apply <id>

To show a mutant:
    mutmut show <id>


Survived üôÅ (4)

---- ./program273.py (4) ----

# mutant 1
--- ./program273.py
+++ ./program273.py
@@ -19,7 +19,7 @@
 # ============================================
 def substract_elements(test_tup1, test_tup2):
 
-  res = tuple(map(lambda i, j: i - j, test_tup1, test_tup2))
+  res = tuple(map(lambda i, j: i + j, test_tup1, test_tup2))
 
   return (res) 
 

# mutant 2
--- ./program273.py
+++ ./program273.py
@@ -19,7 +19,7 @@
 # ============================================
 def substract_elements(test_tup1, test_tup2):
 
-  res = tuple(map(lambda i, j: i - j, test_tup1, test_tup2))
+  res = tuple(map(lambda i, j: None, test_tup1, test_tup2))
 
   return (res) 
 

# mutant 3
--- ./program273.py
+++ ./program273.py
@@ -19,7 +19,7 @@
 # ============================================
 def substract_elements(test_tup1, test_tup2):
 
-  res = tuple(map(lambda i, j: i - j, test_tup1, test_tup2))
+  res = None
 
   return (res) 
 

# mutant 5
--- ./program273.py
+++ ./program273.py
@@ -34,7 +34,7 @@
             test_tup1, test_tup2),
             expected
         ):
-            return "PASSED"
+            return "XXPASSEDXX"
         return "FAILED"
     except Exception as exception_obj:
         return type(exception_obj).__name__

