To apply a mutant on disk:
    mutmut apply <id>

To show a mutant:
    mutmut show <id>


Survived 🙁 (7)

---- ./program47.py (7) ----

# mutant 4
--- ./program47.py
+++ ./program47.py
@@ -23,7 +23,7 @@
 
     if (A == B): 
 
-        return 1
+        return 2
 
     elif ((B - A) >= 5):  
 

# mutant 6
--- ./program47.py
+++ ./program47.py
@@ -25,7 +25,7 @@
 
         return 1
 
-    elif ((B - A) >= 5):  
+    elif ((B - A) > 5):  
 
         return 0
 

# mutant 7
--- ./program47.py
+++ ./program47.py
@@ -25,7 +25,7 @@
 
         return 1
 
-    elif ((B - A) >= 5):  
+    elif ((B - A) >= 6):  
 
         return 0
 

# mutant 8
--- ./program47.py
+++ ./program47.py
@@ -27,7 +27,7 @@
 
     elif ((B - A) >= 5):  
 
-        return 0
+        return 1
 
     else:   
 

# mutant 15
--- ./program47.py
+++ ./program47.py
@@ -33,7 +33,7 @@
 
         for i in range(A + 1,B + 1): 
 
-            variable = (variable * (i % 10)) % 10
+            variable = (variable * (i % 11)) % 10
 
         return variable % 10
 

# mutant 20
--- ./program47.py
+++ ./program47.py
@@ -35,7 +35,7 @@
 
             variable = (variable * (i % 10)) % 10
 
-        return variable % 10
+        return variable % 11
 
 # TESTING CODE 
 # ============================================

# mutant 23
--- ./program47.py
+++ ./program47.py
@@ -49,7 +49,7 @@
             expected
         ):
             return "PASSED"
-        return "FAILED"
+        return "XXFAILEDXX"
     except Exception as exception_obj:
         return type(exception_obj).__name__
     

