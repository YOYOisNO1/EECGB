To apply a mutant on disk:
    mutmut apply <id>

To show a mutant:
    mutmut show <id>


Suspicious ü§î (2)

---- ./program9.py (2) ----

# mutant 1
--- ./program9.py
+++ ./program9.py
@@ -19,7 +19,7 @@
 # ============================================
 def find_rotations(str): 
 
-    tmp = str + str
+    tmp = str - str
 
     n = len(str) 
 

# mutant 2
--- ./program9.py
+++ ./program9.py
@@ -19,7 +19,7 @@
 # ============================================
 def find_rotations(str): 
 
-    tmp = str + str
+    tmp = None
 
     n = len(str) 
 


Survived üôÅ (4)

---- ./program9.py (4) ----

# mutant 5
--- ./program9.py
+++ ./program9.py
@@ -23,7 +23,7 @@
 
     n = len(str) 
 
-    for i in range(1,n + 1): 
+    for i in range(1,n - 1): 
 
         substring = tmp[i: i+n] 
 

# mutant 6
--- ./program9.py
+++ ./program9.py
@@ -23,7 +23,7 @@
 
     n = len(str) 
 
-    for i in range(1,n + 1): 
+    for i in range(1,n + 2): 
 
         substring = tmp[i: i+n] 
 

# mutant 7
--- ./program9.py
+++ ./program9.py
@@ -25,7 +25,7 @@
 
     for i in range(1,n + 1): 
 
-        substring = tmp[i: i+n] 
+        substring = tmp[i: i-n] 
 
         if (str == substring): 
 

# mutant 12
--- ./program9.py
+++ ./program9.py
@@ -45,7 +45,7 @@
             expected
         ):
             return "PASSED"
-        return "FAILED"
+        return "XXFAILEDXX"
     except Exception as exception_obj:
         return type(exception_obj).__name__
     

