To apply a mutant on disk:
    mutmut apply <id>

To show a mutant:
    mutmut show <id>


Suspicious ü§î (1)

---- ./program498.py (1) ----

# mutant 11
--- ./program498.py
+++ ./program498.py
@@ -27,7 +27,7 @@
 
     for k in range(int(y / 2), 0, -1):
 
-        if x % k == 0 and y % k == 0:
+        if x / k == 0 and y % k == 0:
 
             gcd = k
 


Survived üôÅ (8)

---- ./program498.py (8) ----

# mutant 1
--- ./program498.py
+++ ./program498.py
@@ -19,7 +19,7 @@
 # ============================================
 def gcd(x, y):
 
-    gcd = 1
+    gcd = 2
 
     if x % y == 0:
 

# mutant 2
--- ./program498.py
+++ ./program498.py
@@ -19,7 +19,7 @@
 # ============================================
 def gcd(x, y):
 
-    gcd = 1
+    gcd = None
 
     if x % y == 0:
 

# mutant 3
--- ./program498.py
+++ ./program498.py
@@ -21,7 +21,7 @@
 
     gcd = 1
 
-    if x % y == 0:
+    if x / y == 0:
 
         return y
 

# mutant 5
--- ./program498.py
+++ ./program498.py
@@ -21,7 +21,7 @@
 
     gcd = 1
 
-    if x % y == 0:
+    if x % y == 1:
 
         return y
 

# mutant 6
--- ./program498.py
+++ ./program498.py
@@ -25,7 +25,7 @@
 
         return y
 
-    for k in range(int(y / 2), 0, -1):
+    for k in range(int(y * 2), 0, -1):
 
         if x % k == 0 and y % k == 0:
 

# mutant 7
--- ./program498.py
+++ ./program498.py
@@ -25,7 +25,7 @@
 
         return y
 
-    for k in range(int(y / 2), 0, -1):
+    for k in range(int(y / 3), 0, -1):
 
         if x % k == 0 and y % k == 0:
 

# mutant 8
--- ./program498.py
+++ ./program498.py
@@ -25,7 +25,7 @@
 
         return y
 
-    for k in range(int(y / 2), 0, -1):
+    for k in range(int(y / 2), 1, -1):
 
         if x % k == 0 and y % k == 0:
 

# mutant 22
--- ./program498.py
+++ ./program498.py
@@ -47,7 +47,7 @@
             expected
         ):
             return "PASSED"
-        return "FAILED"
+        return "XXFAILEDXX"
     except Exception as exception_obj:
         return type(exception_obj).__name__
     

