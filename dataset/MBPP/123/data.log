To apply a mutant on disk:
    mutmut apply <id>

To show a mutant:
    mutmut show <id>


Survived 🙁 (9)

---- ./program123.py (9) ----

# mutant 2
--- ./program123.py
+++ ./program123.py
@@ -21,7 +21,7 @@
 
     if not isinstance(limit, int):
 
-        return "Input is not an integer!"
+        return "XXInput is not an integer!XX"
 
     if limit < 1:
 

# mutant 3
--- ./program123.py
+++ ./program123.py
@@ -23,7 +23,7 @@
 
         return "Input is not an integer!"
 
-    if limit < 1:
+    if limit <= 1:
 
         return "Input must be bigger than 0!"
 

# mutant 4
--- ./program123.py
+++ ./program123.py
@@ -23,7 +23,7 @@
 
         return "Input is not an integer!"
 
-    if limit < 1:
+    if limit < 2:
 
         return "Input must be bigger than 0!"
 

# mutant 5
--- ./program123.py
+++ ./program123.py
@@ -25,7 +25,7 @@
 
     if limit < 1:
 
-        return "Input must be bigger than 0!"
+        return "XXInput must be bigger than 0!XX"
 
     amicables = set()
 

# mutant 7
--- ./program123.py
+++ ./program123.py
@@ -29,7 +29,7 @@
 
     amicables = set()
 
-    for num in range(2, limit+1):
+    for num in range(3, limit+1):
 
         if num in amicables:
 

# mutant 8
--- ./program123.py
+++ ./program123.py
@@ -29,7 +29,7 @@
 
     amicables = set()
 
-    for num in range(2, limit+1):
+    for num in range(2, limit-1):
 
         if num in amicables:
 

# mutant 9
--- ./program123.py
+++ ./program123.py
@@ -29,7 +29,7 @@
 
     amicables = set()
 
-    for num in range(2, limit+1):
+    for num in range(2, limit+2):
 
         if num in amicables:
 

# mutant 11
--- ./program123.py
+++ ./program123.py
@@ -33,7 +33,7 @@
 
         if num in amicables:
 
-            continue
+            break
 
         sum_fact = sum([fact for fact in range(1, num) if num % fact == 0])
 

# mutant 27
--- ./program123.py
+++ ./program123.py
@@ -59,7 +59,7 @@
             expected
         ):
             return "PASSED"
-        return "FAILED"
+        return "XXFAILEDXX"
     except Exception as exception_obj:
         return type(exception_obj).__name__
     

