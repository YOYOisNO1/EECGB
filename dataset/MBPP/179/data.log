To apply a mutant on disk:
    mutmut apply <id>

To show a mutant:
    mutmut show <id>


Timed out ‚è∞ (10)

---- ./program179.py (10) ----

# mutant 5
--- ./program179.py
+++ ./program179.py
@@ -25,7 +25,7 @@
 
 	n = 0 
 
-	while (temp > 0): 
+	while (temp >= 0): 
 
 		terms.append(temp % 10) 
 

# mutant 6
--- ./program179.py
+++ ./program179.py
@@ -25,7 +25,7 @@
 
 	n = 0 
 
-	while (temp > 0): 
+	while (temp > 1): 
 
 		terms.append(temp % 10) 
 

# mutant 9
--- ./program179.py
+++ ./program179.py
@@ -29,7 +29,7 @@
 
 		terms.append(temp % 10) 
 
-		temp = int(temp / 10) 
+		temp = int(temp * 10) 
 
 		n+=1 
 

# mutant 12
--- ./program179.py
+++ ./program179.py
@@ -31,7 +31,7 @@
 
 		temp = int(temp / 10) 
 
-		n+=1 
+		n=1 
 
 	terms.reverse() 
 

# mutant 13
--- ./program179.py
+++ ./program179.py
@@ -31,7 +31,7 @@
 
 		temp = int(temp / 10) 
 
-		n+=1 
+		n-=1 
 
 	terms.reverse() 
 

# mutant 21
--- ./program179.py
+++ ./program179.py
@@ -43,7 +43,7 @@
 
 		next_term = 0 
 
-		for j in range(1,n+1): 
+		for j in range(2,n+1): 
 
 			next_term += terms[i - j] 
 

# mutant 22
--- ./program179.py
+++ ./program179.py
@@ -43,7 +43,7 @@
 
 		next_term = 0 
 
-		for j in range(1,n+1): 
+		for j in range(1,n-1): 
 
 			next_term += terms[i - j] 
 

# mutant 24
--- ./program179.py
+++ ./program179.py
@@ -45,7 +45,7 @@
 
 		for j in range(1,n+1): 
 
-			next_term += terms[i - j] 
+			next_term = terms[i - j] 
 
 		terms.append(next_term) 
 

# mutant 25
--- ./program179.py
+++ ./program179.py
@@ -45,7 +45,7 @@
 
 		for j in range(1,n+1): 
 
-			next_term += terms[i - j] 
+			next_term -= terms[i - j] 
 
 		terms.append(next_term) 
 

# mutant 28
--- ./program179.py
+++ ./program179.py
@@ -49,7 +49,7 @@
 
 		terms.append(next_term) 
 
-		i+=1 
+		i-=1 
 
 	return (next_term == x) 
 


Survived üôÅ (2)

---- ./program179.py (2) ----

# mutant 15
--- ./program179.py
+++ ./program179.py
@@ -35,7 +35,7 @@
 
 	terms.reverse() 
 
-	next_term = 0 
+	next_term = 1 
 
 	i = n 
 

# mutant 33
--- ./program179.py
+++ ./program179.py
@@ -65,7 +65,7 @@
             expected
         ):
             return "PASSED"
-        return "FAILED"
+        return "XXFAILEDXX"
     except Exception as exception_obj:
         return type(exception_obj).__name__
     

