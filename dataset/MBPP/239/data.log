To apply a mutant on disk:
    mutmut apply <id>

To show a mutant:
    mutmut show <id>


Survived üôÅ (7)

---- ./program239.py (7) ----

# mutant 1
--- ./program239.py
+++ ./program239.py
@@ -19,7 +19,7 @@
 # ============================================
 def get_total_number_of_sequences(m,n): 
 
-	T=[[0 for i in range(n+1)] for i in range(m+1)] 
+	T=[[1 for i in range(n+1)] for i in range(m+1)] 
 
 	for i in range(m+1): 
 

# mutant 3
--- ./program239.py
+++ ./program239.py
@@ -19,7 +19,7 @@
 # ============================================
 def get_total_number_of_sequences(m,n): 
 
-	T=[[0 for i in range(n+1)] for i in range(m+1)] 
+	T=[[0 for i in range(n+2)] for i in range(m+1)] 
 
 	for i in range(m+1): 
 

# mutant 5
--- ./program239.py
+++ ./program239.py
@@ -19,7 +19,7 @@
 # ============================================
 def get_total_number_of_sequences(m,n): 
 
-	T=[[0 for i in range(n+1)] for i in range(m+1)] 
+	T=[[0 for i in range(n+1)] for i in range(m+2)] 
 
 	for i in range(m+1): 
 

# mutant 15
--- ./program239.py
+++ ./program239.py
@@ -25,7 +25,7 @@
 
 		for j in range(n+1): 
 
-			if i==0 or j==0: 
+			if i==0 and j==0: 
 
 				T[i][j]=0
 

# mutant 16
--- ./program239.py
+++ ./program239.py
@@ -27,7 +27,7 @@
 
 			if i==0 or j==0: 
 
-				T[i][j]=0
+				T[i][j]=1
 
 			elif i<j: 
 

# mutant 17
--- ./program239.py
+++ ./program239.py
@@ -27,7 +27,7 @@
 
 			if i==0 or j==0: 
 
-				T[i][j]=0
+				T[i][j]= None
 
 			elif i<j: 
 

# mutant 34
--- ./program239.py
+++ ./program239.py
@@ -55,7 +55,7 @@
             expected
         ):
             return "PASSED"
-        return "FAILED"
+        return "XXFAILEDXX"
     except Exception as exception_obj:
         return type(exception_obj).__name__
     

