To apply a mutant on disk:
    mutmut apply <id>

To show a mutant:
    mutmut show <id>


Suspicious ü§î (17)

---- ./program423.py (17) ----

# mutant 3
--- ./program423.py
+++ ./program423.py
@@ -23,7 +23,7 @@
 
                         for j in range(m)]   
 
-    for col in range(n-1, -1, -1): 
+    for col in range(n+1, -1, -1): 
 
         for row in range(m):  
 

# mutant 8
--- ./program423.py
+++ ./program423.py
@@ -23,7 +23,7 @@
 
                         for j in range(m)]   
 
-    for col in range(n-1, -1, -1): 
+    for col in range(n-1, -1, -2): 
 
         for row in range(m):  
 

# mutant 12
--- ./program423.py
+++ ./program423.py
@@ -29,7 +29,7 @@
 
             if (col == n-1): 
 
-                right = 0
+                right = 1
 
             else: 
 

# mutant 24
--- ./program423.py
+++ ./program423.py
@@ -37,7 +37,7 @@
 
             if (row == 0 or col == n-1): 
 
-                right_up = 0
+                right_up = None
 
             else: 
 

# mutant 26
--- ./program423.py
+++ ./program423.py
@@ -41,7 +41,7 @@
 
             else: 
 
-                right_up = goldTable[row-1][col+1] 
+                right_up = goldTable[row-2][col+1] 
 
             if (row == m-1 or col == n-1): 
 

# mutant 27
--- ./program423.py
+++ ./program423.py
@@ -41,7 +41,7 @@
 
             else: 
 
-                right_up = goldTable[row-1][col+1] 
+                right_up = goldTable[row-1][col-1] 
 
             if (row == m-1 or col == n-1): 
 

# mutant 28
--- ./program423.py
+++ ./program423.py
@@ -41,7 +41,7 @@
 
             else: 
 
-                right_up = goldTable[row-1][col+1] 
+                right_up = goldTable[row-1][col+2] 
 
             if (row == m-1 or col == n-1): 
 

# mutant 29
--- ./program423.py
+++ ./program423.py
@@ -41,7 +41,7 @@
 
             else: 
 
-                right_up = goldTable[row-1][col+1] 
+                right_up = None 
 
             if (row == m-1 or col == n-1): 
 

# mutant 36
--- ./program423.py
+++ ./program423.py
@@ -43,7 +43,7 @@
 
                 right_up = goldTable[row-1][col+1] 
 
-            if (row == m-1 or col == n-1): 
+            if (row == m-1 and col == n-1): 
 
                 right_down = 0
 

# mutant 42
--- ./program423.py
+++ ./program423.py
@@ -49,7 +49,7 @@
 
             else: 
 
-                right_down = goldTable[row+1][col+1] 
+                right_down = goldTable[row+1][col+2] 
 
             goldTable[row][col] = gold[row][col] + max(right, right_up, right_down) 
 

# mutant 45
--- ./program423.py
+++ ./program423.py
@@ -51,7 +51,7 @@
 
                 right_down = goldTable[row+1][col+1] 
 
-            goldTable[row][col] = gold[row][col] + max(right, right_up, right_down) 
+            goldTable[row][col] = None 
 
     res = goldTable[0][0] 
 

# mutant 46
--- ./program423.py
+++ ./program423.py
@@ -53,7 +53,7 @@
 
             goldTable[row][col] = gold[row][col] + max(right, right_up, right_down) 
 
-    res = goldTable[0][0] 
+    res = goldTable[1][0] 
 
     for i in range(1, m): 
 

# mutant 47
--- ./program423.py
+++ ./program423.py
@@ -53,7 +53,7 @@
 
             goldTable[row][col] = gold[row][col] + max(right, right_up, right_down) 
 
-    res = goldTable[0][0] 
+    res = goldTable[0][1] 
 
     for i in range(1, m): 
 

# mutant 48
--- ./program423.py
+++ ./program423.py
@@ -53,7 +53,7 @@
 
             goldTable[row][col] = gold[row][col] + max(right, right_up, right_down) 
 
-    res = goldTable[0][0] 
+    res = None 
 
     for i in range(1, m): 
 

# mutant 49
--- ./program423.py
+++ ./program423.py
@@ -55,7 +55,7 @@
 
     res = goldTable[0][0] 
 
-    for i in range(1, m): 
+    for i in range(2, m): 
 
         res = max(res, goldTable[i][0])  
 

# mutant 50
--- ./program423.py
+++ ./program423.py
@@ -57,7 +57,7 @@
 
     for i in range(1, m): 
 
-        res = max(res, goldTable[i][0])  
+        res = max(res, goldTable[i][1])  
 
     return res 
 

# mutant 53
--- ./program423.py
+++ ./program423.py
@@ -72,7 +72,7 @@
             gold, m, n),
             expected
         ):
-            return "PASSED"
+            return "XXPASSEDXX"
         return "FAILED"
     except Exception as exception_obj:
         return type(exception_obj).__name__


Survived üôÅ (6)

---- ./program423.py (6) ----

# mutant 1
--- ./program423.py
+++ ./program423.py
@@ -19,7 +19,7 @@
 # ============================================
 def get_maxgold(gold, m, n): 
 
-    goldTable = [[0 for i in range(n)] 
+    goldTable = [[1 for i in range(n)] 
 
                         for j in range(m)]   
 

# mutant 6
--- ./program423.py
+++ ./program423.py
@@ -23,7 +23,7 @@
 
                         for j in range(m)]   
 
-    for col in range(n-1, -1, -1): 
+    for col in range(n-1, -2, -1): 
 
         for row in range(m):  
 

# mutant 18
--- ./program423.py
+++ ./program423.py
@@ -35,7 +35,7 @@
 
                 right = goldTable[row][col+1] 
 
-            if (row == 0 or col == n-1): 
+            if (row == 1 or col == n-1): 
 
                 right_up = 0
 

# mutant 39
--- ./program423.py
+++ ./program423.py
@@ -49,7 +49,7 @@
 
             else: 
 
-                right_down = goldTable[row+1][col+1] 
+                right_down = goldTable[row-1][col+1] 
 
             goldTable[row][col] = gold[row][col] + max(right, right_up, right_down) 
 

# mutant 41
--- ./program423.py
+++ ./program423.py
@@ -49,7 +49,7 @@
 
             else: 
 
-                right_down = goldTable[row+1][col+1] 
+                right_down = goldTable[row+1][col-1] 
 
             goldTable[row][col] = gold[row][col] + max(right, right_up, right_down) 
 

# mutant 54
--- ./program423.py
+++ ./program423.py
@@ -73,7 +73,7 @@
             expected
         ):
             return "PASSED"
-        return "FAILED"
+        return "XXFAILEDXX"
     except Exception as exception_obj:
         return type(exception_obj).__name__
     

