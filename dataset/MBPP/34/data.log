To apply a mutant on disk:
    mutmut apply <id>

To show a mutant:
    mutmut show <id>


Timed out ‚è∞ (2)

---- ./program34.py (2) ----

# mutant 9
--- ./program34.py
+++ ./program34.py
@@ -25,7 +25,7 @@
 
     while (l <= r):  
 
-        mid = (l + r) / 2
+        mid = (l + r) / 3
 
         mid= int (mid) 
 

# mutant 27
--- ./program34.py
+++ ./program34.py
@@ -39,7 +39,7 @@
 
         else: 
 
-            l = mid + 1
+            l = mid - 1
 
     return (-1) 
 


Survived üôÅ (7)

---- ./program34.py (7) ----

# mutant 1
--- ./program34.py
+++ ./program34.py
@@ -19,7 +19,7 @@
 # ============================================
 def find_missing(ar,N): 
 
-    l = 0
+    l = 1
 
     r = N - 1
 

# mutant 24
--- ./program34.py
+++ ./program34.py
@@ -35,7 +35,7 @@
 
         elif (ar[mid] != mid + 1): 
 
-            r = mid - 1 
+            r = mid + 1 
 
         else: 
 

# mutant 25
--- ./program34.py
+++ ./program34.py
@@ -35,7 +35,7 @@
 
         elif (ar[mid] != mid + 1): 
 
-            r = mid - 1 
+            r = mid - 2 
 
         else: 
 

# mutant 26
--- ./program34.py
+++ ./program34.py
@@ -35,7 +35,7 @@
 
         elif (ar[mid] != mid + 1): 
 
-            r = mid - 1 
+            r = None 
 
         else: 
 

# mutant 30
--- ./program34.py
+++ ./program34.py
@@ -41,7 +41,7 @@
 
             l = mid + 1
 
-    return (-1) 
+    return (+1) 
 
 # TESTING CODE 
 # ============================================

# mutant 31
--- ./program34.py
+++ ./program34.py
@@ -41,7 +41,7 @@
 
             l = mid + 1
 
-    return (-1) 
+    return (-2) 
 
 # TESTING CODE 
 # ============================================

# mutant 34
--- ./program34.py
+++ ./program34.py
@@ -55,7 +55,7 @@
             expected
         ):
             return "PASSED"
-        return "FAILED"
+        return "XXFAILEDXX"
     except Exception as exception_obj:
         return type(exception_obj).__name__
     

