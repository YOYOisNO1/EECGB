To apply a mutant on disk:
    mutmut apply <id>

To show a mutant:
    mutmut show <id>


Survived üôÅ (18)

---- ./program622.py (18) ----

# mutant 5
--- ./program622.py
+++ ./program622.py
@@ -23,7 +23,7 @@
 
   j = 0
 
-  m1 = -1
+  m1 = +1
 
   m2 = -1
 

# mutant 6
--- ./program622.py
+++ ./program622.py
@@ -23,7 +23,7 @@
 
   j = 0
 
-  m1 = -1
+  m1 = -2
 
   m2 = -1
 

# mutant 7
--- ./program622.py
+++ ./program622.py
@@ -23,7 +23,7 @@
 
   j = 0
 
-  m1 = -1
+  m1 = None
 
   m2 = -1
 

# mutant 8
--- ./program622.py
+++ ./program622.py
@@ -25,7 +25,7 @@
 
   m1 = -1
 
-  m2 = -1
+  m2 = +1
 
   count = 0
 

# mutant 9
--- ./program622.py
+++ ./program622.py
@@ -25,7 +25,7 @@
 
   m1 = -1
 
-  m2 = -1
+  m2 = -2
 
   count = 0
 

# mutant 10
--- ./program622.py
+++ ./program622.py
@@ -25,7 +25,7 @@
 
   m1 = -1
 
-  m2 = -1
+  m2 = None
 
   count = 0
 

# mutant 20
--- ./program622.py
+++ ./program622.py
@@ -35,7 +35,7 @@
 
     if i == n:
 
-      m1 = m2
+      m1 = None
 
       m2 = arr2[0]
 

# mutant 21
--- ./program622.py
+++ ./program622.py
@@ -37,7 +37,7 @@
 
       m1 = m2
 
-      m2 = arr2[0]
+      m2 = arr2[1]
 
       break
 

# mutant 22
--- ./program622.py
+++ ./program622.py
@@ -37,7 +37,7 @@
 
       m1 = m2
 
-      m2 = arr2[0]
+      m2 = None
 
       break
 

# mutant 23
--- ./program622.py
+++ ./program622.py
@@ -39,7 +39,7 @@
 
       m2 = arr2[0]
 
-      break
+      continue
 
     elif j == n:
 

# mutant 25
--- ./program622.py
+++ ./program622.py
@@ -43,7 +43,7 @@
 
     elif j == n:
 
-      m1 = m2
+      m1 = None
 
       m2 = arr1[0]
 

# mutant 26
--- ./program622.py
+++ ./program622.py
@@ -45,7 +45,7 @@
 
       m1 = m2
 
-      m2 = arr1[0]
+      m2 = arr1[1]
 
       break
 

# mutant 27
--- ./program622.py
+++ ./program622.py
@@ -45,7 +45,7 @@
 
       m1 = m2
 
-      m2 = arr1[0]
+      m2 = None
 
       break
 

# mutant 28
--- ./program622.py
+++ ./program622.py
@@ -47,7 +47,7 @@
 
       m2 = arr1[0]
 
-      break
+      continue
 
     if arr1[i] <= arr2[j]:
 

# mutant 29
--- ./program622.py
+++ ./program622.py
@@ -49,7 +49,7 @@
 
       break
 
-    if arr1[i] <= arr2[j]:
+    if arr1[i] < arr2[j]:
 
       m1 = m2
 

# mutant 44
--- ./program622.py
+++ ./program622.py
@@ -70,7 +70,7 @@
 # TESTING CODE 
 # ============================================
 def validate_solution(actual, expected):
-    return abs(actual - expected) < 1e-06
+    return abs(actual - expected) <= 1e-06
 
 def driver(arr1, arr2, n, expected):
     try:

# mutant 45
--- ./program622.py
+++ ./program622.py
@@ -70,7 +70,7 @@
 # TESTING CODE 
 # ============================================
 def validate_solution(actual, expected):
-    return abs(actual - expected) < 1e-06
+    return abs(actual - expected) < 2e-06
 
 def driver(arr1, arr2, n, expected):
     try:

# mutant 47
--- ./program622.py
+++ ./program622.py
@@ -79,7 +79,7 @@
             expected
         ):
             return "PASSED"
-        return "FAILED"
+        return "XXFAILEDXX"
     except Exception as exception_obj:
         return type(exception_obj).__name__
     

