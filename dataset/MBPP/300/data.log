To apply a mutant on disk:
    mutmut apply <id>

To show a mutant:
    mutmut show <id>


Suspicious ü§î (5)

---- ./program300.py (5) ----

# mutant 4
--- ./program300.py
+++ ./program300.py
@@ -21,7 +21,7 @@
 
 	nCr = 1
 
-	res = 1
+	res = None
 
 	for r in range(1, n + 1): 
 

# mutant 9
--- ./program300.py
+++ ./program300.py
@@ -25,7 +25,7 @@
 
 	for r in range(1, n + 1): 
 
-		nCr = (nCr * (n + 1 - r)) / r 
+		nCr = (nCr * (n - 1 - r)) / r 
 
 		res += nCr * nCr 
 

# mutant 11
--- ./program300.py
+++ ./program300.py
@@ -25,7 +25,7 @@
 
 	for r in range(1, n + 1): 
 
-		nCr = (nCr * (n + 1 - r)) / r 
+		nCr = (nCr * (n + 1 + r)) / r 
 
 		res += nCr * nCr 
 

# mutant 12
--- ./program300.py
+++ ./program300.py
@@ -25,7 +25,7 @@
 
 	for r in range(1, n + 1): 
 
-		nCr = (nCr * (n + 1 - r)) / r 
+		nCr = (nCr * (n + 1 - r)) * r 
 
 		res += nCr * nCr 
 

# mutant 13
--- ./program300.py
+++ ./program300.py
@@ -25,7 +25,7 @@
 
 	for r in range(1, n + 1): 
 
-		nCr = (nCr * (n + 1 - r)) / r 
+		nCr = None 
 
 		res += nCr * nCr 
 


Survived üôÅ (4)

---- ./program300.py (4) ----

# mutant 7
--- ./program300.py
+++ ./program300.py
@@ -23,7 +23,7 @@
 
 	res = 1
 
-	for r in range(1, n + 1): 
+	for r in range(1, n + 2): 
 
 		nCr = (nCr * (n + 1 - r)) / r 
 

# mutant 18
--- ./program300.py
+++ ./program300.py
@@ -34,7 +34,7 @@
 # TESTING CODE 
 # ============================================
 def validate_solution(actual, expected):
-    return abs(actual - expected) < 1e-06
+    return abs(actual - expected) <= 1e-06
 
 def driver(n, expected):
     try:

# mutant 19
--- ./program300.py
+++ ./program300.py
@@ -34,7 +34,7 @@
 # TESTING CODE 
 # ============================================
 def validate_solution(actual, expected):
-    return abs(actual - expected) < 1e-06
+    return abs(actual - expected) < 2e-06
 
 def driver(n, expected):
     try:

# mutant 21
--- ./program300.py
+++ ./program300.py
@@ -43,7 +43,7 @@
             expected
         ):
             return "PASSED"
-        return "FAILED"
+        return "XXFAILEDXX"
     except Exception as exception_obj:
         return type(exception_obj).__name__
     

