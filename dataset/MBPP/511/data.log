To apply a mutant on disk:
    mutmut apply <id>

To show a mutant:
    mutmut show <id>


Timed out ‚è∞ (5)

---- ./program511.py (5) ----

# mutant 5
--- ./program511.py
+++ ./program511.py
@@ -23,7 +23,7 @@
 
     i = 2
 
-    while(i * i <= num): 
+    while(i / i <= num): 
 
         while(num % i == 0): 
 

# mutant 12
--- ./program511.py
+++ ./program511.py
@@ -29,7 +29,7 @@
 
             sum += i 
 
-            num /= i 
+            num = i 
 
         i += 1
 

# mutant 13
--- ./program511.py
+++ ./program511.py
@@ -29,7 +29,7 @@
 
             sum += i 
 
-            num /= i 
+            num *= i 
 
         i += 1
 

# mutant 14
--- ./program511.py
+++ ./program511.py
@@ -31,7 +31,7 @@
 
             num /= i 
 
-        i += 1
+        i = 1
 
     sum += num 
 

# mutant 15
--- ./program511.py
+++ ./program511.py
@@ -31,7 +31,7 @@
 
             num /= i 
 
-        i += 1
+        i -= 1
 
     sum += num 
 


Suspicious ü§î (3)

---- ./program511.py (3) ----

# mutant 16
--- ./program511.py
+++ ./program511.py
@@ -31,7 +31,7 @@
 
             num /= i 
 
-        i += 1
+        i += 2
 
     sum += num 
 

# mutant 18
--- ./program511.py
+++ ./program511.py
@@ -33,7 +33,7 @@
 
         i += 1
 
-    sum += num 
+    sum -= num 
 
     return sum
 

# mutant 19
--- ./program511.py
+++ ./program511.py
@@ -40,7 +40,7 @@
 # TESTING CODE 
 # ============================================
 def validate_solution(actual, expected):
-    return actual == expected
+    return actual != expected
 
 def driver(num, expected):
     try:


Survived üôÅ (3)

---- ./program511.py (3) ----

# mutant 3
--- ./program511.py
+++ ./program511.py
@@ -21,7 +21,7 @@
 
     sum = 0
 
-    i = 2
+    i = 3
 
     while(i * i <= num): 
 

# mutant 6
--- ./program511.py
+++ ./program511.py
@@ -23,7 +23,7 @@
 
     i = 2
 
-    while(i * i <= num): 
+    while(i * i < num): 
 
         while(num % i == 0): 
 

# mutant 21
--- ./program511.py
+++ ./program511.py
@@ -49,7 +49,7 @@
             expected
         ):
             return "PASSED"
-        return "FAILED"
+        return "XXFAILEDXX"
     except Exception as exception_obj:
         return type(exception_obj).__name__
     

