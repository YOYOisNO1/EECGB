To apply a mutant on disk:
    mutmut apply <id>

To show a mutant:
    mutmut show <id>


Suspicious ü§î (1)

---- ./program417.py (1) ----

# mutant 1
--- ./program417.py
+++ ./program417.py
@@ -19,7 +19,7 @@
 # ============================================
 def group_tuples(Input): 
 
-	out = {} 
+	out = None 
 
 	for elem in Input: 
 


Survived üôÅ (4)

---- ./program417.py (4) ----

# mutant 2
--- ./program417.py
+++ ./program417.py
@@ -25,7 +25,7 @@
 
 		try: 
 
-			out[elem[0]].extend(elem[1:]) 
+			out[elem[1]].extend(elem[1:]) 
 
 		except KeyError: 
 

# mutant 3
--- ./program417.py
+++ ./program417.py
@@ -25,7 +25,7 @@
 
 		try: 
 
-			out[elem[0]].extend(elem[1:]) 
+			out[elem[0]].extend(elem[2:]) 
 
 		except KeyError: 
 

# mutant 4
--- ./program417.py
+++ ./program417.py
@@ -29,7 +29,7 @@
 
 		except KeyError: 
 
-			out[elem[0]] = list(elem) 
+			out[elem[1]] = list(elem) 
 
 	return [tuple(values) for values in out.values()] 
 

# mutant 7
--- ./program417.py
+++ ./program417.py
@@ -44,7 +44,7 @@
             input),
             expected
         ):
-            return "PASSED"
+            return "XXPASSEDXX"
         return "FAILED"
     except Exception as exception_obj:
         return type(exception_obj).__name__

