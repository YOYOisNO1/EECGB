To apply a mutant on disk:
    mutmut apply <id>

To show a mutant:
    mutmut show <id>


Suspicious ü§î (6)

---- ./program709.py (6) ----

# mutant 1
--- ./program709.py
+++ ./program709.py
@@ -21,7 +21,7 @@
 
 def get_unique(test_list):
 
-  res = defaultdict(list)
+  res = None
 
   for sub in test_list:
 

# mutant 3
--- ./program709.py
+++ ./program709.py
@@ -25,7 +25,7 @@
 
   for sub in test_list:
 
-    res[sub[1]].append(sub[0])
+    res[sub[1]].append(sub[1])
 
   res = dict(res)
 

# mutant 4
--- ./program709.py
+++ ./program709.py
@@ -27,7 +27,7 @@
 
     res[sub[1]].append(sub[0])
 
-  res = dict(res)
+  res = None
 
   res_dict = dict()
 

# mutant 5
--- ./program709.py
+++ ./program709.py
@@ -29,7 +29,7 @@
 
   res = dict(res)
 
-  res_dict = dict()
+  res_dict = None
 
   for key in res:
 

# mutant 6
--- ./program709.py
+++ ./program709.py
@@ -33,7 +33,7 @@
 
   for key in res:
 
-    res_dict[key] = len(list(set(res[key])))
+    res_dict[key] = None
 
   return (str(res_dict)) 
 

# mutant 8
--- ./program709.py
+++ ./program709.py
@@ -48,7 +48,7 @@
             test_list),
             expected
         ):
-            return "PASSED"
+            return "XXPASSEDXX"
         return "FAILED"
     except Exception as exception_obj:
         return type(exception_obj).__name__


Survived üôÅ (1)

---- ./program709.py (1) ----

# mutant 9
--- ./program709.py
+++ ./program709.py
@@ -49,7 +49,7 @@
             expected
         ):
             return "PASSED"
-        return "FAILED"
+        return "XXFAILEDXX"
     except Exception as exception_obj:
         return type(exception_obj).__name__
     

