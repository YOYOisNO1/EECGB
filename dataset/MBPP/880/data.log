To apply a mutant on disk:
    mutmut apply <id>

To show a mutant:
    mutmut show <id>


Survived 🙁 (7)

---- ./program880.py (7) ----

# mutant 3
--- ./program880.py
+++ ./program880.py
@@ -19,7 +19,7 @@
 # ============================================
 def check_solution(a,b,c) : 
 
-    if ((b*b) - (4*a*c)) > 0 : 
+    if ((b*b) - (5*a*c)) > 0 : 
 
         return ("2 solutions") 
 

# mutant 4
--- ./program880.py
+++ ./program880.py
@@ -19,7 +19,7 @@
 # ============================================
 def check_solution(a,b,c) : 
 
-    if ((b*b) - (4*a*c)) > 0 : 
+    if ((b*b) - (4/a*c)) > 0 : 
 
         return ("2 solutions") 
 

# mutant 5
--- ./program880.py
+++ ./program880.py
@@ -19,7 +19,7 @@
 # ============================================
 def check_solution(a,b,c) : 
 
-    if ((b*b) - (4*a*c)) > 0 : 
+    if ((b*b) - (4*a/c)) > 0 : 
 
         return ("2 solutions") 
 

# mutant 7
--- ./program880.py
+++ ./program880.py
@@ -19,7 +19,7 @@
 # ============================================
 def check_solution(a,b,c) : 
 
-    if ((b*b) - (4*a*c)) > 0 : 
+    if ((b*b) - (4*a*c)) > 1 : 
 
         return ("2 solutions") 
 

# mutant 12
--- ./program880.py
+++ ./program880.py
@@ -23,7 +23,7 @@
 
         return ("2 solutions") 
 
-    elif ((b*b) - (4*a*c)) == 0 : 
+    elif ((b*b) - (4/a*c)) == 0 : 
 
         return ("1 solution") 
 

# mutant 13
--- ./program880.py
+++ ./program880.py
@@ -23,7 +23,7 @@
 
         return ("2 solutions") 
 
-    elif ((b*b) - (4*a*c)) == 0 : 
+    elif ((b*b) - (4*a/c)) == 0 : 
 
         return ("1 solution") 
 

# mutant 20
--- ./program880.py
+++ ./program880.py
@@ -43,7 +43,7 @@
             expected
         ):
             return "PASSED"
-        return "FAILED"
+        return "XXFAILEDXX"
     except Exception as exception_obj:
         return type(exception_obj).__name__
     

