To apply a mutant on disk:
    mutmut apply <id>

To show a mutant:
    mutmut show <id>


Suspicious ü§î (4)

---- ./program633.py (4) ----

# mutant 1
--- ./program633.py
+++ ./program633.py
@@ -19,7 +19,7 @@
 # ============================================
 def pair_or_sum(arr,n) : 
 
-    ans = 0 
+    ans = 1 
 
     for i in range(0,n) :    
 

# mutant 6
--- ./program633.py
+++ ./program633.py
@@ -25,7 +25,7 @@
 
         for j in range(i + 1,n) :   
 
-            ans = ans + (arr[i] ^ arr[j])          
+            ans = ans - (arr[i] ^ arr[j])          
 
     return ans 
 

# mutant 8
--- ./program633.py
+++ ./program633.py
@@ -25,7 +25,7 @@
 
         for j in range(i + 1,n) :   
 
-            ans = ans + (arr[i] ^ arr[j])          
+            ans = None          
 
     return ans 
 

# mutant 9
--- ./program633.py
+++ ./program633.py
@@ -32,7 +32,7 @@
 # TESTING CODE 
 # ============================================
 def validate_solution(actual, expected):
-    return actual == expected
+    return actual != expected
 
 def driver(arr, n, expected):
     try:


Survived üôÅ (1)

---- ./program633.py (1) ----

# mutant 11
--- ./program633.py
+++ ./program633.py
@@ -41,7 +41,7 @@
             expected
         ):
             return "PASSED"
-        return "FAILED"
+        return "XXFAILEDXX"
     except Exception as exception_obj:
         return type(exception_obj).__name__
     

