To apply a mutant on disk:
    mutmut apply <id>

To show a mutant:
    mutmut show <id>


Survived üôÅ (9)

---- ./program188.py (9) ----

# mutant 2
--- ./program188.py
+++ ./program188.py
@@ -19,7 +19,7 @@
 # ============================================
 def prod_square(n):
 
-    for i in range(2,(n) + 1):
+    for i in range(2,(n) - 1):
 
         if (i*i < (n+1)):
 

# mutant 3
--- ./program188.py
+++ ./program188.py
@@ -19,7 +19,7 @@
 # ============================================
 def prod_square(n):
 
-    for i in range(2,(n) + 1):
+    for i in range(2,(n) + 2):
 
         if (i*i < (n+1)):
 

# mutant 4
--- ./program188.py
+++ ./program188.py
@@ -21,7 +21,7 @@
 
     for i in range(2,(n) + 1):
 
-        if (i*i < (n+1)):
+        if (i/i < (n+1)):
 
             for j in range(2,n + 1):
 

# mutant 5
--- ./program188.py
+++ ./program188.py
@@ -21,7 +21,7 @@
 
     for i in range(2,(n) + 1):
 
-        if (i*i < (n+1)):
+        if (i*i <= (n+1)):
 
             for j in range(2,n + 1):
 

# mutant 6
--- ./program188.py
+++ ./program188.py
@@ -21,7 +21,7 @@
 
     for i in range(2,(n) + 1):
 
-        if (i*i < (n+1)):
+        if (i*i < (n-1)):
 
             for j in range(2,n + 1):
 

# mutant 7
--- ./program188.py
+++ ./program188.py
@@ -21,7 +21,7 @@
 
     for i in range(2,(n) + 1):
 
-        if (i*i < (n+1)):
+        if (i*i < (n+2)):
 
             for j in range(2,n + 1):
 

# mutant 9
--- ./program188.py
+++ ./program188.py
@@ -23,7 +23,7 @@
 
         if (i*i < (n+1)):
 
-            for j in range(2,n + 1):
+            for j in range(2,n - 1):
 
                 if ((i*i*j*j) == n):
 

# mutant 10
--- ./program188.py
+++ ./program188.py
@@ -23,7 +23,7 @@
 
         if (i*i < (n+1)):
 
-            for j in range(2,n + 1):
+            for j in range(2,n + 2):
 
                 if ((i*i*j*j) == n):
 

# mutant 19
--- ./program188.py
+++ ./program188.py
@@ -43,7 +43,7 @@
             expected
         ):
             return "PASSED"
-        return "FAILED"
+        return "XXFAILEDXX"
     except Exception as exception_obj:
         return type(exception_obj).__name__
     

