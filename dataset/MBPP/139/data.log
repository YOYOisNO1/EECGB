To apply a mutant on disk:
    mutmut apply <id>

To show a mutant:
    mutmut show <id>


Suspicious ü§î (4)

---- ./program139.py (4) ----

# mutant 2
--- ./program139.py
+++ ./program139.py
@@ -19,7 +19,7 @@
 # ============================================
 def circle_circumference(r):
 
-  perimeter=2*3.1415*r
+  perimeter=2/3.1415*r
 
   return perimeter
 

# mutant 3
--- ./program139.py
+++ ./program139.py
@@ -19,7 +19,7 @@
 # ============================================
 def circle_circumference(r):
 
-  perimeter=2*3.1415*r
+  perimeter=2*4.141500000000001*r
 
   return perimeter
 

# mutant 4
--- ./program139.py
+++ ./program139.py
@@ -19,7 +19,7 @@
 # ============================================
 def circle_circumference(r):
 
-  perimeter=2*3.1415*r
+  perimeter=2*3.1415/r
 
   return perimeter
 

# mutant 9
--- ./program139.py
+++ ./program139.py
@@ -34,7 +34,7 @@
             r),
             expected
         ):
-            return "PASSED"
+            return "XXPASSEDXX"
         return "FAILED"
     except Exception as exception_obj:
         return type(exception_obj).__name__


Survived üôÅ (3)

---- ./program139.py (3) ----

# mutant 7
--- ./program139.py
+++ ./program139.py
@@ -26,7 +26,7 @@
 # TESTING CODE 
 # ============================================
 def validate_solution(actual, expected):
-    return abs(actual - expected) < 1e-09
+    return abs(actual - expected) <= 1e-09
 
 def driver(r, expected):
     try:

# mutant 8
--- ./program139.py
+++ ./program139.py
@@ -26,7 +26,7 @@
 # TESTING CODE 
 # ============================================
 def validate_solution(actual, expected):
-    return abs(actual - expected) < 1e-09
+    return abs(actual - expected) < 2e-09
 
 def driver(r, expected):
     try:

# mutant 10
--- ./program139.py
+++ ./program139.py
@@ -35,7 +35,7 @@
             expected
         ):
             return "PASSED"
-        return "FAILED"
+        return "XXFAILEDXX"
     except Exception as exception_obj:
         return type(exception_obj).__name__
     

