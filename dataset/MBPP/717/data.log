To apply a mutant on disk:
    mutmut apply <id>

To show a mutant:
    mutmut show <id>


Survived 🙁 (9)

---- ./program717.py (9) ----

# mutant 2
--- ./program717.py
+++ ./program717.py
@@ -25,7 +25,7 @@
 
     n = len(data)
 
-    if n <= 1:
+    if n < 1:
 
         return 0.0
 

# mutant 3
--- ./program717.py
+++ ./program717.py
@@ -25,7 +25,7 @@
 
     n = len(data)
 
-    if n <= 1:
+    if n <= 2:
 
         return 0.0
 

# mutant 4
--- ./program717.py
+++ ./program717.py
@@ -27,7 +27,7 @@
 
     if n <= 1:
 
-        return 0.0
+        return 1.0
 
     mean, sd = avg_calc(data), 0.0
 

# mutant 18
--- ./program717.py
+++ ./program717.py
@@ -43,7 +43,7 @@
 
     n, mean = len(ls), 0.0
 
-    if n <= 1:
+    if n < 1:
 
         return ls[0]
 

# mutant 19
--- ./program717.py
+++ ./program717.py
@@ -43,7 +43,7 @@
 
     n, mean = len(ls), 0.0
 
-    if n <= 1:
+    if n <= 2:
 
         return ls[0]
 

# mutant 20
--- ./program717.py
+++ ./program717.py
@@ -45,7 +45,7 @@
 
     if n <= 1:
 
-        return ls[0]
+        return ls[1]
 
     for el in ls:
 

# mutant 26
--- ./program717.py
+++ ./program717.py
@@ -58,7 +58,7 @@
 # TESTING CODE 
 # ============================================
 def validate_solution(actual, expected):
-    return abs(actual - expected) < 1e-09
+    return abs(actual - expected) <= 1e-09
 
 def driver(data_arg0, expected):
     try:

# mutant 27
--- ./program717.py
+++ ./program717.py
@@ -58,7 +58,7 @@
 # TESTING CODE 
 # ============================================
 def validate_solution(actual, expected):
-    return abs(actual - expected) < 1e-09
+    return abs(actual - expected) < 2e-09
 
 def driver(data_arg0, expected):
     try:

# mutant 29
--- ./program717.py
+++ ./program717.py
@@ -67,7 +67,7 @@
             expected
         ):
             return "PASSED"
-        return "FAILED"
+        return "XXFAILEDXX"
     except Exception as exception_obj:
         return type(exception_obj).__name__
     

