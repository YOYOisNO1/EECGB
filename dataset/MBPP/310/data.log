To apply a mutant on disk:
    mutmut apply <id>

To show a mutant:
    mutmut show <id>


Suspicious ü§î (2)

---- ./program310.py (2) ----

# mutant 3
--- ./program310.py
+++ ./program310.py
@@ -26,7 +26,7 @@
 # TESTING CODE 
 # ============================================
 def validate_solution(actual, expected):
-    return actual == expected
+    return actual != expected
 
 def driver(str1, expected):
     try:

# mutant 5
--- ./program310.py
+++ ./program310.py
@@ -35,7 +35,7 @@
             expected
         ):
             return "PASSED"
-        return "FAILED"
+        return "XXFAILEDXX"
     except Exception as exception_obj:
         return type(exception_obj).__name__
     


Survived üôÅ (3)

---- ./program310.py (3) ----

# mutant 1
--- ./program310.py
+++ ./program310.py
@@ -19,7 +19,7 @@
 # ============================================
 def string_to_tuple(str1):
 
-    result = tuple(x for x in str1 if not x.isspace()) 
+    result = tuple(x for x in str1 if  x.isspace()) 
 
     return result
 

# mutant 2
--- ./program310.py
+++ ./program310.py
@@ -19,7 +19,7 @@
 # ============================================
 def string_to_tuple(str1):
 
-    result = tuple(x for x in str1 if not x.isspace()) 
+    result = None 
 
     return result
 

# mutant 4
--- ./program310.py
+++ ./program310.py
@@ -34,7 +34,7 @@
             str1),
             expected
         ):
-            return "PASSED"
+            return "XXPASSEDXX"
         return "FAILED"
     except Exception as exception_obj:
         return type(exception_obj).__name__

