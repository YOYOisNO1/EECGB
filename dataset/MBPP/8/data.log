To apply a mutant on disk:
    mutmut apply <id>

To show a mutant:
    mutmut show <id>


Suspicious ü§î (5)

---- ./program8.py (5) ----

# mutant 2
--- ./program8.py
+++ ./program8.py
@@ -19,7 +19,7 @@
 # ============================================
 def square_nums(nums):
 
- square_nums = list(map(lambda x: x ** 2, nums))
+ square_nums = list(map(lambda x: x ** 3, nums))
 
  return square_nums
 

# mutant 3
--- ./program8.py
+++ ./program8.py
@@ -19,7 +19,7 @@
 # ============================================
 def square_nums(nums):
 
- square_nums = list(map(lambda x: x ** 2, nums))
+ square_nums = list(map(lambda x: None, nums))
 
  return square_nums
 

# mutant 4
--- ./program8.py
+++ ./program8.py
@@ -19,7 +19,7 @@
 # ============================================
 def square_nums(nums):
 
- square_nums = list(map(lambda x: x ** 2, nums))
+ square_nums = None
 
  return square_nums
 

# mutant 5
--- ./program8.py
+++ ./program8.py
@@ -26,7 +26,7 @@
 # TESTING CODE 
 # ============================================
 def validate_solution(actual, expected):
-    return actual == expected
+    return actual != expected
 
 def driver(nums, expected):
     try:

# mutant 6
--- ./program8.py
+++ ./program8.py
@@ -34,7 +34,7 @@
             nums),
             expected
         ):
-            return "PASSED"
+            return "XXPASSEDXX"
         return "FAILED"
     except Exception as exception_obj:
         return type(exception_obj).__name__


Survived üôÅ (1)

---- ./program8.py (1) ----

# mutant 7
--- ./program8.py
+++ ./program8.py
@@ -35,7 +35,7 @@
             expected
         ):
             return "PASSED"
-        return "FAILED"
+        return "XXFAILEDXX"
     except Exception as exception_obj:
         return type(exception_obj).__name__
     

