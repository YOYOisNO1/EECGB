To apply a mutant on disk:
    mutmut apply <id>

To show a mutant:
    mutmut show <id>


Suspicious ü§î (2)

---- ./program371.py (2) ----

# mutant 4
--- ./program371.py
+++ ./program371.py
@@ -23,7 +23,7 @@
 
         return left_element
 
-    mid = left_element + (right_element - left_element) // 2
+    mid = left_element + (right_element - left_element) / 2
 
     if A[mid] == mid:
 

# mutant 10
--- ./program371.py
+++ ./program371.py
@@ -31,7 +31,7 @@
 
     else:
 
-        return smallest_missing(A, left_element, mid - 1)
+        return smallest_missing(A, left_element, mid + 1)
 
 # TESTING CODE 
 # ============================================


Survived üôÅ (3)

---- ./program371.py (3) ----

# mutant 5
--- ./program371.py
+++ ./program371.py
@@ -23,7 +23,7 @@
 
         return left_element
 
-    mid = left_element + (right_element - left_element) // 2
+    mid = left_element + (right_element - left_element) // 3
 
     if A[mid] == mid:
 

# mutant 9
--- ./program371.py
+++ ./program371.py
@@ -27,7 +27,7 @@
 
     if A[mid] == mid:
 
-        return smallest_missing(A, mid + 1, right_element)
+        return smallest_missing(A, mid + 2, right_element)
 
     else:
 

# mutant 14
--- ./program371.py
+++ ./program371.py
@@ -45,7 +45,7 @@
             expected
         ):
             return "PASSED"
-        return "FAILED"
+        return "XXFAILEDXX"
     except Exception as exception_obj:
         return type(exception_obj).__name__
     

