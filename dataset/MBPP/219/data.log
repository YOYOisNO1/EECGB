To apply a mutant on disk:
    mutmut apply <id>

To show a mutant:
    mutmut show <id>


Survived üôÅ (6)

---- ./program219.py (6) ----

# mutant 4
--- ./program219.py
+++ ./program219.py
@@ -29,7 +29,7 @@
 
   for idx, val in enumerate(temp):
 
-    if idx < K or idx >= len(temp) - K:
+    if idx <= K or idx >= len(temp) - K:
 
       res.append(val)
 

# mutant 5
--- ./program219.py
+++ ./program219.py
@@ -29,7 +29,7 @@
 
   for idx, val in enumerate(temp):
 
-    if idx < K or idx >= len(temp) - K:
+    if idx < K or idx > len(temp) - K:
 
       res.append(val)
 

# mutant 6
--- ./program219.py
+++ ./program219.py
@@ -29,7 +29,7 @@
 
   for idx, val in enumerate(temp):
 
-    if idx < K or idx >= len(temp) - K:
+    if idx < K or idx >= len(temp) + K:
 
       res.append(val)
 

# mutant 7
--- ./program219.py
+++ ./program219.py
@@ -29,7 +29,7 @@
 
   for idx, val in enumerate(temp):
 
-    if idx < K or idx >= len(temp) - K:
+    if idx < K and idx >= len(temp) - K:
 
       res.append(val)
 

# mutant 8
--- ./program219.py
+++ ./program219.py
@@ -33,7 +33,7 @@
 
       res.append(val)
 
-  res = tuple(res)
+  res = None
 
   return (res) 
 

# mutant 10
--- ./program219.py
+++ ./program219.py
@@ -48,7 +48,7 @@
             test_tup, k),
             expected
         ):
-            return "PASSED"
+            return "XXPASSEDXX"
         return "FAILED"
     except Exception as exception_obj:
         return type(exception_obj).__name__

