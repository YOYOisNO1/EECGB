To apply a mutant on disk:
    mutmut apply <id>

To show a mutant:
    mutmut show <id>


Suspicious ü§î (5)

---- ./program247.py (5) ----

# mutant 11
--- ./program247.py
+++ ./program247.py
@@ -29,7 +29,7 @@
 
 	for cl in range(2, n+1): 
 
-		for i in range(n-cl+1): 
+		for i in range(n-cl+2): 
 
 			j = i+cl-1
 

# mutant 12
--- ./program247.py
+++ ./program247.py
@@ -31,7 +31,7 @@
 
 		for i in range(n-cl+1): 
 
-			j = i+cl-1
+			j = i-cl-1
 
 			if str[i] == str[j] and cl == 2: 
 

# mutant 25
--- ./program247.py
+++ ./program247.py
@@ -39,7 +39,7 @@
 
 			elif str[i] == str[j]: 
 
-				L[i][j] = L[i+1][j-1] + 2
+				L[i][j] = L[i+1][j+1] + 2
 
 			else: 
 

# mutant 27
--- ./program247.py
+++ ./program247.py
@@ -39,7 +39,7 @@
 
 			elif str[i] == str[j]: 
 
-				L[i][j] = L[i+1][j-1] + 2
+				L[i][j] = L[i+1][j-1] - 2
 
 			else: 
 

# mutant 28
--- ./program247.py
+++ ./program247.py
@@ -39,7 +39,7 @@
 
 			elif str[i] == str[j]: 
 
-				L[i][j] = L[i+1][j-1] + 2
+				L[i][j] = L[i+1][j-1] + 3
 
 			else: 
 


Survived üôÅ (9)

---- ./program247.py (9) ----

# mutant 2
--- ./program247.py
+++ ./program247.py
@@ -21,7 +21,7 @@
 
 	n = len(str) 
 
-	L = [[0 for x in range(n)] for x in range(n)] 
+	L = [[1 for x in range(n)] for x in range(n)] 
 
 	for i in range(n): 
 

# mutant 8
--- ./program247.py
+++ ./program247.py
@@ -27,7 +27,7 @@
 
 		L[i][i] = 1
 
-	for cl in range(2, n+1): 
+	for cl in range(2, n+2): 
 
 		for i in range(n-cl+1): 
 

# mutant 18
--- ./program247.py
+++ ./program247.py
@@ -33,7 +33,7 @@
 
 			j = i+cl-1
 
-			if str[i] == str[j] and cl == 2: 
+			if str[i] == str[j] and cl == 3: 
 
 				L[i][j] = 2
 

# mutant 20
--- ./program247.py
+++ ./program247.py
@@ -35,7 +35,7 @@
 
 			if str[i] == str[j] and cl == 2: 
 
-				L[i][j] = 2
+				L[i][j] = 3
 
 			elif str[i] == str[j]: 
 

# mutant 21
--- ./program247.py
+++ ./program247.py
@@ -35,7 +35,7 @@
 
 			if str[i] == str[j] and cl == 2: 
 
-				L[i][j] = 2
+				L[i][j] = None
 
 			elif str[i] == str[j]: 
 

# mutant 24
--- ./program247.py
+++ ./program247.py
@@ -39,7 +39,7 @@
 
 			elif str[i] == str[j]: 
 
-				L[i][j] = L[i+1][j-1] + 2
+				L[i][j] = L[i+2][j-1] + 2
 
 			else: 
 

# mutant 35
--- ./program247.py
+++ ./program247.py
@@ -45,7 +45,7 @@
 
 				L[i][j] = max(L[i][j-1], L[i+1][j]); 
 
-	return L[0][n-1]
+	return L[1][n-1]
 
 # TESTING CODE 
 # ============================================

# mutant 37
--- ./program247.py
+++ ./program247.py
@@ -45,7 +45,7 @@
 
 				L[i][j] = max(L[i][j-1], L[i+1][j]); 
 
-	return L[0][n-1]
+	return L[0][n-2]
 
 # TESTING CODE 
 # ============================================

# mutant 40
--- ./program247.py
+++ ./program247.py
@@ -59,7 +59,7 @@
             expected
         ):
             return "PASSED"
-        return "FAILED"
+        return "XXFAILEDXX"
     except Exception as exception_obj:
         return type(exception_obj).__name__
     

