To apply a mutant on disk:
    mutmut apply <id>

To show a mutant:
    mutmut show <id>


Suspicious ü§î (1)

---- ./program483.py (1) ----

# mutant 7
--- ./program483.py
+++ ./program483.py
@@ -25,7 +25,7 @@
 
     for i in range(1,x): 
 
-        fact = fact * i 
+        fact = None 
 
         if (fact % x == 0): 
 


Survived üôÅ (5)

---- ./program483.py (5) ----

# mutant 1
--- ./program483.py
+++ ./program483.py
@@ -19,7 +19,7 @@
 # ============================================
 def first_factorial_divisible_number(x): 
 
-    i = 1;
+    i = 2;
 
     fact = 1; 
 

# mutant 2
--- ./program483.py
+++ ./program483.py
@@ -19,7 +19,7 @@
 # ============================================
 def first_factorial_divisible_number(x): 
 
-    i = 1;
+    i = None;
 
     fact = 1; 
 

# mutant 3
--- ./program483.py
+++ ./program483.py
@@ -21,7 +21,7 @@
 
     i = 1;
 
-    fact = 1; 
+    fact = 2; 
 
     for i in range(1,x): 
 

# mutant 5
--- ./program483.py
+++ ./program483.py
@@ -23,7 +23,7 @@
 
     fact = 1; 
 
-    for i in range(1,x): 
+    for i in range(2,x): 
 
         fact = fact * i 
 

# mutant 14
--- ./program483.py
+++ ./program483.py
@@ -45,7 +45,7 @@
             expected
         ):
             return "PASSED"
-        return "FAILED"
+        return "XXFAILEDXX"
     except Exception as exception_obj:
         return type(exception_obj).__name__
     

