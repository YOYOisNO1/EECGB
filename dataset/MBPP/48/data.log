To apply a mutant on disk:
    mutmut apply <id>

To show a mutant:
    mutmut show <id>


Timed out ⏰ (3)

---- ./program48.py (3) ----

# mutant 6
--- ./program48.py
+++ ./program48.py
@@ -21,7 +21,7 @@
 
     count = 0;res = 0;temp = n
 
-    while temp > 0:
+    while temp >= 0:
 
         if count % 2 == 0:
 

# mutant 19
--- ./program48.py
+++ ./program48.py
@@ -29,7 +29,7 @@
 
         count += 1
 
-        temp >>= 1
+        temp = 1
 
     return (n | res)
 

# mutant 20
--- ./program48.py
+++ ./program48.py
@@ -29,7 +29,7 @@
 
         count += 1
 
-        temp >>= 1
+        temp <<= 1
 
     return (n | res)
 


Survived 🙁 (3)

---- ./program48.py (3) ----

# mutant 3
--- ./program48.py
+++ ./program48.py
@@ -19,7 +19,7 @@
 # ============================================
 def odd_bit_set_number(n):
 
-    count = 0;res = 0;temp = n
+    count = 0;res = 1;temp = n
 
     while temp > 0:
 

# mutant 7
--- ./program48.py
+++ ./program48.py
@@ -21,7 +21,7 @@
 
     count = 0;res = 0;temp = n
 
-    while temp > 0:
+    while temp > 1:
 
         if count % 2 == 0:
 

# mutant 25
--- ./program48.py
+++ ./program48.py
@@ -45,7 +45,7 @@
             expected
         ):
             return "PASSED"
-        return "FAILED"
+        return "XXFAILEDXX"
     except Exception as exception_obj:
         return type(exception_obj).__name__
     

