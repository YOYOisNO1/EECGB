To apply a mutant on disk:
    mutmut apply <id>

To show a mutant:
    mutmut show <id>


Survived üôÅ (8)

---- ./program784.py (8) ----

# mutant 5
--- ./program784.py
+++ ./program784.py
@@ -19,7 +19,7 @@
 # ============================================
 def mul_even_odd(list1):
 
-    first_even = next((el for el in list1 if el%2==0),-1)
+    first_even = next((el for el in list1 if el%2==0),+1)
 
     first_odd = next((el for el in list1 if el%2!=0),-1)
 

# mutant 6
--- ./program784.py
+++ ./program784.py
@@ -19,7 +19,7 @@
 # ============================================
 def mul_even_odd(list1):
 
-    first_even = next((el for el in list1 if el%2==0),-1)
+    first_even = next((el for el in list1 if el%2==0),-2)
 
     first_odd = next((el for el in list1 if el%2!=0),-1)
 

# mutant 8
--- ./program784.py
+++ ./program784.py
@@ -21,7 +21,7 @@
 
     first_even = next((el for el in list1 if el%2==0),-1)
 
-    first_odd = next((el for el in list1 if el%2!=0),-1)
+    first_odd = next((el for el in list1 if el/2!=0),-1)
 
     return (first_even*first_odd)
 

# mutant 9
--- ./program784.py
+++ ./program784.py
@@ -21,7 +21,7 @@
 
     first_even = next((el for el in list1 if el%2==0),-1)
 
-    first_odd = next((el for el in list1 if el%2!=0),-1)
+    first_odd = next((el for el in list1 if el%3!=0),-1)
 
     return (first_even*first_odd)
 

# mutant 12
--- ./program784.py
+++ ./program784.py
@@ -21,7 +21,7 @@
 
     first_even = next((el for el in list1 if el%2==0),-1)
 
-    first_odd = next((el for el in list1 if el%2!=0),-1)
+    first_odd = next((el for el in list1 if el%2!=0),+1)
 
     return (first_even*first_odd)
 

# mutant 13
--- ./program784.py
+++ ./program784.py
@@ -21,7 +21,7 @@
 
     first_even = next((el for el in list1 if el%2==0),-1)
 
-    first_odd = next((el for el in list1 if el%2!=0),-1)
+    first_odd = next((el for el in list1 if el%2!=0),-2)
 
     return (first_even*first_odd)
 

# mutant 15
--- ./program784.py
+++ ./program784.py
@@ -23,7 +23,7 @@
 
     first_odd = next((el for el in list1 if el%2!=0),-1)
 
-    return (first_even*first_odd)
+    return (first_even/first_odd)
 
 # TESTING CODE 
 # ============================================

# mutant 18
--- ./program784.py
+++ ./program784.py
@@ -37,7 +37,7 @@
             expected
         ):
             return "PASSED"
-        return "FAILED"
+        return "XXFAILEDXX"
     except Exception as exception_obj:
         return type(exception_obj).__name__
     

